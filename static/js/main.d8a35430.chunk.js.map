{"version":3,"sources":["axios-instance.js","constatns.js","components/PlanetGrid/PlanetsGrid.js","components/PlanetGrid/PlanetsHeader.js","UI/Spinner/Spinner.js","components/PlanetDetails/PlanetDetailsContent.js","UI/Hyperspeed/Hyperspeed.js","components/PlanetDetails/PlanetDetails.js","container/Planets/Planets.js","container/Planets/UnPlanets.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","method","getPeople","id","get","concat","getFilm","SORT","ASC","DESC","NONE","SORT_TYPE","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","COLUMNS","Object","keys","OMIT_KEYS","planetGrid","props","planets","toConsumableArray","sort","a","b","key","dir","localeCompare","map","planet","index","react_default","createElement","Fragment","col","className","onClick","clicked","planetsHeader","columns","column","classes","push","join","objectSpread","onSort","setSort","split","spinner","planetDetails","label","planetDetail","detail","value","indexOf","length","el","i","Spinner_Spinner","toLowerCase","style","width","hyperspeed","planetName","PlanetDetailsContent","Hyperspeed_Hyperspeed","Planets","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentPage","nextPage","prevPage","details","detailed","myRef","React","createRef","_this2","then","res","setState","data","next","fetchNext","previous","fetchPrevious","nextUrl","_this3","prevUrl","_this4","_this5","newState","_this6","_this7","setTimeout","window","scrollTo","current","offsetTop","getFilms","_this8","promises","results","films","film","Promise","all","movies","movie","title","_this9","residents","resident","citizens","citizen","_this10","nextBtn","type","loadNext","prevBtn","loadPrev","ref","react_router_dom","to","PlanetsHeader","PlanetGrid_PlanetsGrid","toggleDetails","PlanetDetails_PlanetDetails","Component","home","App","react_router","path","exact","component","UnpaginatedPlanets","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6ZAGMA,SAAWC,EAAMC,OAAO,CAC1BC,QAHY,wBAIZC,OAAQ,QAGZJ,EAASK,UAAY,SAAAC,GACjB,OAAON,EAASO,IAAT,UAAAC,OAAuBF,KAElCN,EAASS,QAAU,SAAAH,GACf,OAAON,EAASO,IAAT,QAAAC,OAAqBF,KAGjBN,QCfFU,EAAO,CAChBC,IAAK,EACLC,MAAO,EACPC,KAAM,GAGGC,EAAY,CACrBC,KAAM,eACNC,gBAAiB,UACjBC,eAAgB,UAChBC,SAAU,UACVC,QAAS,eACTC,QAAS,eACTC,QAAS,GACTC,cAAe,UACfC,WAAY,WAGHC,EAAUC,OAAOC,KAAKZ,GAEtBa,EAAY,CAAC,UAAW,SAAU,OAAQ,MAAO,QAAS,qBCSxDC,SAzBI,SAAAC,GACf,IAAMC,EAAUD,EAAMC,QAAUL,OAAAM,EAAA,EAAAN,CAAII,EAAMC,SAASE,KAAK,SAACC,EAAEC,GACvD,OAAIL,EAAMG,KAAKG,IACW,YAAtBF,EAAEJ,EAAMG,KAAKG,MAA4B,EAAIN,EAAMG,KAAKI,IAClC,YAAtBF,EAAEL,EAAMG,KAAKG,KAA2B,EAAIN,EAAMG,KAAKI,IAC1B,YAA9BtB,EAAUe,EAAMG,KAAKG,MACZF,EAAEJ,EAAMG,KAAKG,KAAKD,EAAEL,EAAMG,KAAKG,MAAQN,EAAMG,KAAKI,IAEnDH,EAAEJ,EAAMG,KAAKG,KAAKE,cAAcH,EAAEL,EAAMG,KAAKG,MAAQN,EAAMG,KAAKI,IANhD,IAS9BE,IAAK,SAACC,EAAQC,GAAT,OACFC,EAAAR,EAAAS,cAACD,EAAAR,EAAMU,SAAP,CAAiBR,IAAG,QAAA3B,OAAU+B,EAAOC,IAChChB,EAAQc,IAAI,SAAAM,GAAG,OAAIH,EAAAR,EAAAS,cAAA,OAAKG,UAAW,oBAAsBV,IAAG,QAAA3B,OAAUoC,IAAQL,EAAOK,MACtFH,EAAAR,EAAAS,cAAA,OAAKG,UAAW,sCACXC,QAAS,kBAAMjB,EAAMkB,QAAQP,SAGtC,KACJ,OACIC,EAAAR,EAAAS,cAAAD,EAAAR,EAAAU,SAAA,KACKb,KCiBEkB,EAvCO,SAAAnB,GAElB,IAcMoB,EAAUzB,EAAQc,IAAI,SAAAY,GACxB,IAAMC,EAAU,CAAC,2BAA4BD,GAK7C,OAJIA,IAAWrB,EAAMG,KAAKG,MACtBgB,EAAQC,KAAK,YACbD,EAAQC,KAAKvB,EAAMG,KAAKI,IAAOP,EAAMG,KAAKI,MAAQ1B,EAAKC,IAAM,MAAQ,OAAU,KAG/E8B,EAAAR,EAAAS,cAAA,OAAKG,UAAWM,EAAQE,KAAK,KAAMlB,IAAG,QAAA3B,OAAU0C,GAC5CJ,QAAS,kBAtBL,SAACX,GACb,IAAMH,EAAIP,OAAA6B,EAAA,EAAA7B,CAAA,GAAOI,EAAMG,MACvB,IAAKA,EAAKG,KAAOH,EAAKG,MAAQA,EAC1B,OAAQH,EAAKI,KACT,KAAK1B,EAAKC,IAAKqB,EAAKI,IAAM1B,EAAKE,KAAM,MACrC,KAAKF,EAAKE,KAAMoB,EAAKI,IAAM1B,EAAKG,KAAM,MACtC,KAAKH,EAAKG,KAAMmB,EAAKI,IAAM1B,EAAKC,IAAK,MACrC,QAASqB,EAAKI,IAAM1B,EAAKG,KAGjCmB,EAAKG,IAAMA,EACXN,EAAM0B,OAAOvB,GAWUwB,CAAO,GAAAhD,OAAI0C,MAAWT,EAAAR,EAAAS,cAAA,YAAOQ,EAAOO,MAAM,KAAKJ,KAAK,MACnEZ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,aAM5B,OACIJ,EAAAR,EAAAS,cAAAD,EAAAR,EAAAU,SAAA,KACMM,EACFR,EAAAR,EAAAS,cAAA,cC7BGgB,SAJC,kBACZjB,EAAAR,EAAAS,cAAA,OAAKG,UAAW,aC4BLc,EA7BO,SAAA9B,GAClB,IAAI+B,EAAQ/B,EAAMgC,aAAa1B,IAAIsB,MAAM,KAAKJ,KAAK,KAC/CS,EAASjC,EAAMgC,aAAaE,MAChC,OAAIpC,EAAUqC,QAAQnC,EAAMgC,aAAa1B,MAAQ,EAAU,MAC5B,WAA3BN,EAAMgC,aAAa1B,KAA+C,aAA3BN,EAAMgC,aAAa1B,KAC1DyB,EAAoC,WAA3B/B,EAAMgC,aAAa1B,IAAoB,QAAU,YAC1D2B,EAASjC,EAAMgC,aAAaE,MACvBlC,EAAMgC,aAAaE,MAAME,OACtBpC,EAAMgC,aAAaE,MAAMzB,IAAI,SAAC4B,EAAGC,GAAJ,OAAU1B,EAAAR,EAAAS,cAAA,MAAIP,IAAKgC,GAAID,KAAY,OACpEzB,EAAAR,EAAAS,cAAC0B,EAAD,OAC8B,kBAA3BvC,EAAMgC,aAAa1B,MAC1B2B,EACIrB,EAAAR,EAAAS,cAAA,OAAKG,UAAW,+BACZJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,6BAChBJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,8BACZJ,EAAAR,EAAAS,cAAA,QAAMG,UAAW,6BAAuD,YAAzBiB,EAAOO,cAA8BP,EAArC,GAAAtD,OAAiDsD,EAAjD,MAC/CrB,EAAAR,EAAAS,cAAA,OAAKG,UAAW,oBAAqByB,MAAO,CAAEC,MAAK,GAAA/D,OAAKsD,EAAL,WAM/DrB,EAAAR,EAAAS,cAAA,OAAKG,UAAW,uBACZJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,wBAAyBe,GACzCnB,EAAAR,EAAAS,cAAA,OAAKG,UAAW,yBAA2BiB,MCLxCU,SApBI,SAAA3C,GAAK,OACtBY,EAAAR,EAAAS,cAAA,OAAKG,UAAW,SACdJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,QACdJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,oBAChBJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,mBAChBJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,kBAChBJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,qBAChBJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,oBAElBJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,QACdJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,oBAChBJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,mBAChBJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,kBAChBJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,qBAChBJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,uBCePc,SA1BO,SAAA9B,GAClB,IAAM4C,EAAa5C,EAAMU,OAASV,EAAMU,OAAOxB,KAAO,GAChD4C,EAAgB9B,EAAMU,OACxBE,EAAAR,EAAAS,cAAAD,EAAAR,EAAAU,SAAA,KACKlB,OAAOC,KAAKG,EAAMU,QAAQD,IAAI,SAACH,EAAKgC,GAAN,OAC3B1B,EAAAR,EAAAS,cAACgC,EAAD,CAAsBvC,IAAG,OAAA3B,OAAS2B,EAAIgC,GAAKN,aAAc,CAACE,MAAOlC,EAAMU,OAAOJ,GAAMA,IAAKA,QAE/FM,EAAAR,EAAAS,cAAC0B,EAAD,MACN,OACI3B,EAAAR,EAAAS,cAAAD,EAAAR,EAAAU,SAAA,KACAF,EAAAR,EAAAS,cAAA,OAAKG,UAAW,kBACZJ,EAAAR,EAAAS,cAACiC,EAAD,MACAlC,EAAAR,EAAAS,cAAA,OAAKG,UAAW,uBACZJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,yBACZJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,sBACZC,QAAS,kBAAMjB,EAAMkB,QAAQ,SAEjCN,EAAAR,EAAAS,cAAA,OAAKG,UAAW,uBAAyB4B,IAE5Cd,OCiIFiB,qBA7IX,SAAAA,EAAY/C,GAAO,IAAAgD,EAAA,OAAApD,OAAAqD,EAAA,EAAArD,CAAAsD,KAAAH,IACfC,EAAApD,OAAAuD,EAAA,EAAAvD,CAAAsD,KAAAtD,OAAAwD,EAAA,EAAAxD,CAAAmD,GAAAM,KAAAH,KAAMlD,KACDsD,MAAQ,CACTC,YAAa,KACbC,SAAU,KACVC,SAAU,KACVC,SAAS,EACTC,SAAU,KACVxD,KAAM,CACFG,KAAK,EACLC,IAAK1B,EAAKG,OAGlBgE,EAAKY,MAAQC,IAAMC,YAbJd,mFAgBC,IAAAe,EAAAb,KAChB9E,EAAM,YAAY4F,KAAK,SAAAC,GACnBF,EAAKG,SAALtE,OAAA6B,EAAA,EAAA7B,CAAA,GACOmE,EAAKT,MADZ,CAEIC,YAAaU,EAAIE,QAEjBF,EAAIE,KAAKC,MACTL,EAAKM,UAAUJ,EAAIE,KAAKC,MAExBH,EAAIE,KAAKG,UACTP,EAAKQ,cAAcN,EAAIE,KAAKG,8CAK9BE,GAAS,IAAAC,EAAAvB,KACf9E,EAAMoG,GAASR,KAAK,SAAAI,GAAI,OACpBK,EAAKP,SAALtE,OAAA6B,EAAA,EAAA7B,CAAA,GACO6E,EAAKnB,MADZ,CAEIE,SAAUY,EAAKD,gDAGbO,GAAS,IAAAC,EAAAzB,KACnB,IAAKwB,EAAS,OAAQ,EACtBtG,EAAMsG,GAASV,KAAK,SAAAM,GAAQ,OACxBK,EAAKT,SAALtE,OAAA6B,EAAA,EAAA7B,CAAA,GACO+E,EAAKrB,MADZ,CAEIG,SAAUa,EAASH,6CAGpB,IAAAS,EAAA1B,KACD2B,EAAQjF,OAAA6B,EAAA,EAAA7B,CAAA,GAAQsD,KAAKI,OAC3BJ,KAAKgB,SAALtE,OAAA6B,EAAA,EAAA7B,CAAA,GACOiF,EADP,CAEIpB,SAAUoB,EAAStB,YACnBA,YAAasB,EAASrB,SACtBA,SAAU,OACX,kBAAMoB,EAAKP,UAAUO,EAAKtB,MAAMC,YAAYa,2CAExC,IAAAU,EAAA5B,KACD2B,EAAQjF,OAAA6B,EAAA,EAAA7B,CAAA,GAAQsD,KAAKI,OAC3BJ,KAAKgB,SAALtE,OAAA6B,EAAA,EAAA7B,CAAA,GACOiF,EADP,CAEIrB,SAAUqB,EAAStB,YACnBA,YAAasB,EAASpB,SACtBA,SAAU,OACX,kBAAMqB,EAAKP,cAAcO,EAAKxB,MAAMC,YAAYe,yCAElDnE,GACD+C,KAAKgB,SAALtE,OAAA6B,EAAA,EAAA7B,CAAA,GACOsD,KAAKI,MADZ,CAEInD,gDAGMQ,GAAO,IACbgD,EADaoB,EAAA7B,KAEH,OAAVvC,GACAgD,EAAWhD,EACXqE,WAAY,WACRC,OAAOC,SAAS,EAAGH,EAAKnB,MAAMuB,QAAQC,YACvC,MAEHzB,EAAWT,KAAKI,MAAMK,SAE1BT,KAAKgB,SAALtE,OAAA6B,EAAA,EAAA7B,CAAA,GACOsD,KAAKI,MADZ,CAEII,SAAUR,KAAKI,MAAMI,QACrBC,SAAUA,IACX,WACCoB,EAAKM,SAAS1E,GACdoE,EAAKvG,UAAUmC,sCAGdA,GAAO,IAAA2E,EAAApC,KACZ,GAAc,OAAVvC,EAAgB,OAAQ,EAC5B,IAAM4E,EAAWrC,KAAKI,MAAMC,YAAYiC,QAAQ7E,GAAO8E,MAAMhF,IAAI,SAAAiF,GAAI,OAAItH,EAAMsH,KAC/EC,QAAQC,IAAIL,GAAUvB,KAAK,SAAAC,GACvB,IAAM4B,EAAS5B,EAAIxD,IAAI,SAAAqF,GAAK,OAAIA,EAAM3B,KAAK4B,QACrClB,EAAQjF,OAAA6B,EAAA,EAAA7B,CAAA,GAAO0F,EAAKhC,OAC1BuB,EAAStB,YAAYiC,QAAQ7E,GAAOkF,OAASA,EAC7CP,EAAKpB,SAASW,uCAGZlE,GAAO,IAAAqF,EAAA9C,KACb,GAAc,OAAVvC,EAAgB,OAAQ,EAC5B,IAAM4E,EAAWrC,KAAKI,MAAMC,YAAYiC,QAAQ7E,GAAOsF,UAAUxF,IAAI,SAAAyF,GAAQ,OAAI9H,EAAM8H,KACvFP,QAAQC,IAAIL,GAAUvB,KAAK,SAAAC,GACvB,IAAMkC,EAAWlC,EAAIxD,IAAI,SAAA2F,GAAO,OAAIA,EAAQjC,KAAKjF,OAC3C2F,EAAQjF,OAAA6B,EAAA,EAAA7B,CAAA,GAAOoG,EAAK1C,OAC1BuB,EAAStB,YAAYiC,QAAQ7E,GAAOwF,SAAWA,EAC/CH,EAAK9B,SAASW,sCAIb,IAAAwB,EAAAnD,KACCjD,EAAUiD,KAAKI,MAAMC,YAAcL,KAAKI,MAAMC,YAAYiC,QAAU,KACpE9E,EAASwC,KAAKI,MAAMC,aAAuC,OAAxBL,KAAKI,MAAMK,SAAoBT,KAAKI,MAAMC,YAAYiC,QAAQtC,KAAKI,MAAMK,UAAY,KACxH2C,EAAU1F,EAAAR,EAAAS,cAAA,eAAOqC,KAAKI,MAAME,SAC9B5C,EAAAR,EAAAS,cAAA,UAAQG,UAAW,oBAAqBuF,KAAK,SAAStF,QAAS,kBAAMoF,EAAKG,cACxE,MAEAC,EAAU7F,EAAAR,EAAAS,cAAA,eAAOqC,KAAKI,MAAMG,SAC9B7C,EAAAR,EAAAS,cAAA,UAAQG,UAAW,oBAAqBuF,KAAK,SAAStF,QAAS,kBAAMoF,EAAKK,cACxE,MAEN,OACI9F,EAAAR,EAAAS,cAAAD,EAAAR,EAAAU,SAAA,KACIF,EAAAR,EAAAS,cAAA,OAAK8F,IAAKzD,KAAKU,MAAO5C,UAAS,2BAAArC,OAA6BuE,KAAKI,MAAMI,QAAU,UAAY,KACzF9C,EAAAR,EAAAS,cAAC+F,EAAA,EAAD,CAAMC,GAAG,KAAIjG,EAAAR,EAAAS,cAAA,OAAKG,UAAW,iCAC7BJ,EAAAR,EAAAS,cAAA,YACCZ,EACDW,EAAAR,EAAAS,cAAA,OAAKG,UAAW,wBACZJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,gBACZJ,EAAAR,EAAAS,cAACiG,EAAD,CAAe3G,KAAM+C,KAAKI,MAAMnD,KAAMuB,OAAQ,SAACvB,GAAD,OAAUkG,EAAKlG,KAAKA,MAClES,EAAAR,EAAAS,cAACkG,EAAD,CAAa9G,QAASA,EAASE,KAAM+C,KAAKI,MAAMnD,KAAMe,QAAS,SAACP,GAAD,OAAW0F,EAAKW,cAAcrG,OAEjGC,EAAAR,EAAAS,cAAA,OAAKG,UAAW,uBAAyByF,EAASH,IAC7C1F,EAAAR,EAAAS,cAAA,OAAKG,UAAW,mBAAhB,IAAoCJ,EAAAR,EAAAS,cAAC0B,EAAD,MAApC,KACT3B,EAAAR,EAAAS,cAACoG,EAAD,CAAevG,OAAQA,EAAQP,KAAM+C,KAAKI,MAAMnD,KAAMe,QAAS,SAACP,GAAD,OAAW0F,EAAKW,cAAcrG,eAvI3FuG,cCoHPnE,cAnHX,SAAAA,EAAY/C,GAAO,IAAAgD,EAAA,OAAApD,OAAAqD,EAAA,EAAArD,CAAAsD,KAAAH,IACfC,EAAApD,OAAAuD,EAAA,EAAAvD,CAAAsD,KAAAtD,OAAAwD,EAAA,EAAAxD,CAAAmD,GAAAM,KAAAH,KAAMlD,KACDsD,MAAQ,CACTC,YAAa,KACbG,SAAS,EACTC,SAAU,KACVxD,KAAM,CACFG,KAAK,EACLC,IAAK1B,EAAKG,OAGlBgE,EAAKY,MAAQC,IAAMC,YAXJd,mFAcC,IAAAe,EAAAb,KAChB9E,EAAM,YAAY4F,KAAK,SAAAC,GACnB,IAAMY,EAAQjF,OAAA6B,EAAA,EAAA7B,CAAA,GAAOmE,EAAKT,OAC1BuB,EAAStB,YAAc,CAAEiC,QAASvB,EAAIE,KAAKqB,SAC3CzB,EAAKG,SAASW,EAAS,WACfZ,EAAIE,KAAKC,MACTL,EAAKM,UAAUJ,EAAIE,KAAKC,4CAK9BI,GAAS,IAAAC,EAAAvB,KACf9E,EAAMoG,GAASR,KAAK,SAAAI,GAChB,IAAMS,EAAQjF,OAAA6B,EAAA,EAAA7B,CAAA,GAAO6E,EAAKnB,OAC1BuB,EAAStB,YAAYiC,QAAUX,EAAStB,YAAYiC,QAAQ7G,OAAOyF,EAAKD,KAAKqB,SAC7Ef,EAAKP,SAASW,EACV,WACOT,EAAKD,KAAKC,MACTK,EAAKJ,UAAUD,EAAKD,KAAKC,uCAMxCjE,GACD+C,KAAKgB,SAALtE,OAAA6B,EAAA,EAAA7B,CAAA,GACOsD,KAAKI,MADZ,CAEInD,gDAGMQ,GAAO,IACbgD,EADagB,EAAAzB,KAEH,OAAVvC,GACAgD,EAAWhD,EACXqE,WAAY,WACRC,OAAOC,SAAS,EAAGP,EAAKf,MAAMuB,QAAQC,YACvC,MAEHzB,EAAWT,KAAKI,MAAMK,SAE1BT,KAAKgB,SAALtE,OAAA6B,EAAA,EAAA7B,CAAA,GACOsD,KAAKI,MADZ,CAEII,SAAUR,KAAKI,MAAMI,QACrBC,SAAUA,IACX,WACCgB,EAAKU,SAAS1E,GACdgE,EAAKnG,UAAUmC,sCAGdA,GAAO,IAAAiE,EAAA1B,KACZ,GAAc,OAAVvC,EAAgB,OAAQ,EAC5B,IAAM4E,EAAWrC,KAAKI,MAAMC,YAAYiC,QAAQ7E,GAAO8E,MAAMhF,IAAI,SAAAiF,GAAI,OAAItH,EAAMsH,KAC/EC,QAAQC,IAAIL,GAAUvB,KAAK,SAAAC,GACvB,IAAM4B,EAAS5B,EAAIxD,IAAI,SAAAqF,GAAK,OAAIA,EAAM3B,KAAK4B,QACrClB,EAAQjF,OAAA6B,EAAA,EAAA7B,CAAA,GAAOgF,EAAKtB,OAC1BuB,EAAStB,YAAYiC,QAAQ7E,GAAOkF,OAASA,EAC7CjB,EAAKV,SAASW,uCAGZlE,GAAO,IAAAmE,EAAA5B,KACb,GAAc,OAAVvC,EAAgB,OAAQ,EAC5B,IAAM4E,EAAWrC,KAAKI,MAAMC,YAAYiC,QAAQ7E,GAAOsF,UAAUxF,IAAI,SAAAyF,GAAQ,OAAI9H,EAAM8H,KACvFP,QAAQC,IAAIL,GAAUvB,KAAK,SAAAC,GACvB,IAAMkC,EAAWlC,EAAIxD,IAAI,SAAA2F,GAAO,OAAIA,EAAQjC,KAAKjF,OAC3C2F,EAAQjF,OAAA6B,EAAA,EAAA7B,CAAA,GAAOkF,EAAKxB,OAC1BuB,EAAStB,YAAYiC,QAAQ7E,GAAOwF,SAAWA,EAC/CrB,EAAKZ,SAASW,sCAIb,IAAAE,EAAA7B,KACCjD,EAAUiD,KAAKI,MAAMC,YAAcL,KAAKI,MAAMC,YAAYiC,QAAU,KACpE9E,EAASwC,KAAKI,MAAMC,aAAuC,OAAxBL,KAAKI,MAAMK,SAAoBT,KAAKI,MAAMC,YAAYiC,QAAQtC,KAAKI,MAAMK,UAAY,KACxH2C,EAAU1F,EAAAR,EAAAS,cAAA,eAAOqC,KAAKI,MAAME,SAC9B5C,EAAAR,EAAAS,cAAA,UAAQG,UAAW,oBAAqBuF,KAAK,SAAStF,QAAS,kBAAM8D,EAAKyB,cACxE,MAEAC,EAAU7F,EAAAR,EAAAS,cAAA,eAAOqC,KAAKI,MAAMG,SAC9B7C,EAAAR,EAAAS,cAAA,UAAQG,UAAW,oBAAqBuF,KAAK,SAAStF,QAAS,kBAAM8D,EAAK2B,cACxE,MAEN,OACI9F,EAAAR,EAAAS,cAAAD,EAAAR,EAAAU,SAAA,KACIF,EAAAR,EAAAS,cAAA,OAAK8F,IAAKzD,KAAKU,MAAO5C,UAAS,2BAAArC,OAA6BuE,KAAKI,MAAMI,QAAU,UAAY,KACzF9C,EAAAR,EAAAS,cAAC+F,EAAA,EAAD,CAAMC,GAAG,KAAIjG,EAAAR,EAAAS,cAAA,OAAKG,UAAW,iCAC7BJ,EAAAR,EAAAS,cAAA,YACCZ,EACDW,EAAAR,EAAAS,cAAA,OAAKG,UAAW,wBACZJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,gBACZJ,EAAAR,EAAAS,cAACiG,EAAD,CAAe3G,KAAM+C,KAAKI,MAAMnD,KAAMuB,OAAQ,SAACvB,GAAD,OAAU4E,EAAK5E,KAAKA,MAClES,EAAAR,EAAAS,cAACkG,EAAD,CAAa9G,QAASA,EAASE,KAAM+C,KAAKI,MAAMnD,KAAMe,QAAS,SAACP,GAAD,OAAWoE,EAAKiC,cAAcrG,OAEjGC,EAAAR,EAAAS,cAAA,OAAKG,UAAW,uBAAyByF,EAASH,IAC7C1F,EAAAR,EAAAS,cAAA,OAAKG,UAAW,mBAAhB,IAAoCJ,EAAAR,EAAAS,cAAC0B,EAAD,MAApC,KACT3B,EAAAR,EAAAS,cAACoG,EAAD,CAAevG,OAAQA,EAAQP,KAAM+C,KAAKI,MAAMnD,KAAMe,QAAS,SAACP,GAAD,OAAWoE,EAAKiC,cAAcrG,eA7G3FuG,aCKPC,SAbF,SAAAnH,GAAK,OACdY,EAAAR,EAAAS,cAAA,OAAKG,UAAW,gBACZJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,QAChBJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,aACZJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,aAAhB,KAAoCJ,EAAAR,EAAAS,cAAC+F,EAAA,EAAD,CAAMC,GAAG,cAAT,aAAsCjG,EAAAR,EAAAS,cAAA,OAAKG,UAAW,cAAhB,MAE9EJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,aACZJ,EAAAR,EAAAS,cAAA,OAAKG,UAAW,aAAhB,KAAoCJ,EAAAR,EAAAS,cAAC+F,EAAA,EAAD,CAAMC,GAAG,gBAAT,eAA0CjG,EAAAR,EAAAS,cAAA,OAAKG,UAAW,cAAhB,UCW3EoG,0LAZX,OACExG,EAAAR,EAAAS,cAAA,OAAKG,UAAU,OACbJ,EAAAR,EAAAS,cAACwG,EAAA,EAAD,KACEzG,EAAAR,EAAAS,cAACwG,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWL,IACjCvG,EAAAR,EAAAS,cAACwG,EAAA,EAAD,CAAOC,KAAK,eAAeE,UAAWC,IACtC7G,EAAAR,EAAAS,cAACwG,EAAA,EAAD,CAAOC,KAAK,aAAaE,UAAWzE,aAP5BmE,cCIEQ,QACW,cAA7BzC,OAAO0C,SAASC,UAEe,UAA7B3C,OAAO0C,SAASC,UAEhB3C,OAAO0C,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOnH,EAAAR,EAAAS,cAAC+F,EAAA,EAAD,KAAehG,EAAAR,EAAAS,cAACmH,EAAD,OAAyBC,SAASC,eAAe,SD0H1E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrE,KAAK,SAAAsE,GACjCA,EAAaC","file":"static/js/main.d8a35430.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = 'https://swapi.co/api/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl,\r\n    method: 'get'\r\n});\r\n\r\ninstance.getPeople = id => {\r\n    return instance.get(`people/${id}`);\r\n}\r\ninstance.getFilm = id => {\r\n    return instance.get(`film/${id}`);\r\n}\r\n\r\nexport default instance;","export const SORT = {\r\n    ASC: 1,\r\n    DESC: -1,\r\n    NONE: 0\r\n};\r\n\r\nexport const SORT_TYPE = {\r\n    name: 'alphabetical',\r\n    rotation_period: 'numeric',\r\n    orbital_period: 'numeric',\r\n    diameter: 'numeric',\r\n    climate: 'alphabetical',\r\n    gravity: 'alphabetical',\r\n    terrain: '',\r\n    surface_water: 'numeric',\r\n    population: 'numeric',\r\n};\r\n\r\nexport const COLUMNS = Object.keys(SORT_TYPE);\r\n\r\nexport const OMIT_KEYS = ['created', 'edited', 'name', 'url', 'films', 'residents'];","import React from \"react\";\r\nimport {SORT_TYPE, COLUMNS} from '../../constatns';\r\nimport './PlanetsGrid.css';\r\n\r\nconst planetGrid = props => { \r\n    const planets = props.planets ? [...props.planets].sort((a,b) => {\r\n        if(!props.sort.key) return 0;\r\n        if (a[props.sort.key] === 'unknown') return -1 * props.sort.dir;\r\n        if (b[props.sort.key] === 'unknown') return 1 * props.sort.dir;\r\n        if(SORT_TYPE[props.sort.key] === 'numeric') {\r\n            return (a[props.sort.key]-b[props.sort.key]) * props.sort.dir;\r\n        } else {\r\n            return a[props.sort.key].localeCompare(b[props.sort.key]) * props.sort.dir;\r\n        }\r\n    })\r\n    .map( (planet, index) => \r\n        <React.Fragment  key={`cell-${planet+index}`}>\r\n            {COLUMNS.map(col => <div className={'Planets-grid-cell'}  key={`cell-${col}`}>{planet[col]}</div>)}\r\n            <div className={'Planets-grid-cell Planets-grid-more'}\r\n                 onClick={() => props.clicked(index)}\r\n            ></div>\r\n        </React.Fragment>\r\n    ) : null;\r\n    return (\r\n        <>\r\n            {planets}\r\n        </>\r\n)};\r\n\r\nexport default planetGrid;\r\n","import React from \"react\";\r\nimport {SORT, COLUMNS} from '../../constatns';\r\n\r\nconst planetsHeader = props => {\r\n    \r\n    const setSort = (key) => {\r\n        const sort = {...props.sort};\r\n        if (!sort.key || sort.key === key) {\r\n            switch (sort.dir) {\r\n                case SORT.ASC: sort.dir = SORT.DESC; break;\r\n                case SORT.DESC: sort.dir = SORT.NONE; break;\r\n                case SORT.NONE: sort.dir = SORT.ASC; break;\r\n                default: sort.dir = SORT.NONE;\r\n            }\r\n        }\r\n        sort.key = key;\r\n        props.onSort(sort);\r\n    };\r\n    \r\n    const columns = COLUMNS.map(column => {\r\n        const classes = ['Planets-grid-header-cell', column];\r\n        if (column === props.sort.key) {\r\n            classes.push('selected');\r\n            classes.push(props.sort.dir ? (props.sort.dir === SORT.ASC ? 'asc' : 'desc') : '');\r\n        }\r\n        return (\r\n            <div className={classes.join(' ')} key={`head-${column}`} \r\n                onClick={() => setSort(`${column}`)}><span>{column.split('_').join(' ')}</span>\r\n                <div className={'arrow'}></div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            { columns }\r\n            <div></div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default planetsHeader;\r\n","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className={'Loader'}></div>\r\n);\r\n\r\nexport default spinner;","import React from \"react\";\r\nimport { OMIT_KEYS } from '../../constatns';\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\n\r\nconst planetDetails = props => {\r\n    let label = props.planetDetail.key.split('_').join(' ');\r\n    let detail = props.planetDetail.value;\r\n    if (OMIT_KEYS.indexOf(props.planetDetail.key) > -1) return null;\r\n    if (props.planetDetail.key === 'movies' || props.planetDetail.key === 'citizens') {\r\n        label = (props.planetDetail.key === 'movies') ? 'films' : 'residents';\r\n        detail = props.planetDetail.value ?\r\n            (props.planetDetail.value.length ?\r\n                props.planetDetail.value.map((el,i) => <li key={i}>{el}</li>) : 'None') :\r\n            <Spinner />;\r\n    } else if (props.planetDetail.key === 'surface_water') {\r\n        detail = (\r\n            <div className={'Planet-detail-water-wrapper'}>\r\n                <div className={'Planet-detail-lightsaber'}></div>\r\n                <div className={'Planet-detail-water-border'}> \r\n                    <span className={'Planet-detail-water-value'}>{detail.toLowerCase() === 'unknown' ? detail : `${detail}%`}</span>\r\n                    <div className={'Planet-detail-bar'} style={{ width: `${detail}%` }}></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className={'Planet-details-item'}>\r\n            <div className={'Planet-details-label'}>{label}</div>\r\n            <div className={'Planet-details-detail'} >{detail}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default planetDetails;\r\n","import React from 'react';\r\nimport './Hyperspeed.css';\r\n\r\nconst hyperspeed = props => (\r\n  <div className={'scene'}>\r\n    <div className={'wrap'}>\r\n      <div className={'wall wall-right'}></div>\r\n      <div className={'wall wall-left'}></div>\r\n      <div className={'wall wall-top'}></div>\r\n      <div className={'wall wall-bottom'}></div>\r\n      <div className={'wall wall-back'}></div>\r\n    </div>\r\n    <div className={'wrap'}>\r\n      <div className={'wall wall-right'}></div>\r\n      <div className={'wall wall-left'}></div>\r\n      <div className={'wall wall-top'}></div>\r\n      <div className={'wall wall-bottom'}></div>\r\n      <div className={'wall wall-back'}></div>\r\n    </div>\r\n\r\n  </div>\r\n);\r\n\r\nexport default hyperspeed;","import React from \"react\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport PlanetDetailsContent from './PlanetDetailsContent';\r\nimport Hyperspeed from '../../UI/Hyperspeed/Hyperspeed';\r\nimport './PlanetDetails.css';\r\n\r\nconst planetDetails = props => {\r\n    const planetName = props.planet ? props.planet.name : '';\r\n    const planetDetails = props.planet ?\r\n        <>\r\n            {Object.keys(props.planet).map((key, i) => \r\n                <PlanetDetailsContent key={`det-${key+i}`} planetDetail={{value: props.planet[key], key: key}} />)}\r\n        </>\r\n        : <Spinner />\r\n    return (\r\n        <>\r\n        <div className={'Planet-details'}>\r\n            <Hyperspeed />\r\n            <div className={'Planet-details-grid'}>\r\n                <div className={'Planet-details-header'}>\r\n                    <div className={'Planet-details-back'}\r\n                        onClick={() => props.clicked(null)}\r\n                    ></div>\r\n                    <div className={'Planet-details-name'} >{planetName}</div>\r\n                </div>\r\n                {planetDetails}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default planetDetails;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from '../../axios-instance';\r\nimport { SORT } from '../../constatns';\r\nimport PlanetsGrid from '../../components/PlanetGrid/PlanetsGrid';\r\nimport PlanetsHeader from '../../components/PlanetGrid/PlanetsHeader';\r\nimport PlanetDetails from '../../components/PlanetDetails/PlanetDetails';\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\n\r\nimport './Planets.css';\r\n\r\n\r\nclass Planets extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPage: null,\r\n            nextPage: null,\r\n            prevPage: null,\r\n            details: false,\r\n            detailed: null,\r\n            sort: {\r\n                key: false,\r\n                dir: SORT.NONE\r\n            }\r\n        };\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('planets/').then(res => {\r\n            this.setState({\r\n                ...this.state,\r\n                currentPage: res.data\r\n            });\r\n            if (res.data.next) {\r\n                this.fetchNext(res.data.next);\r\n            }\r\n            if (res.data.previous) {\r\n                this.fetchPrevious(res.data.previous);\r\n            }\r\n\r\n        })\r\n    }\r\n    fetchNext(nextUrl) {\r\n        axios(nextUrl).then(next =>\r\n            this.setState({\r\n                ...this.state,\r\n                nextPage: next.data\r\n            }));\r\n    }\r\n    fetchPrevious(prevUrl) {\r\n        if (!prevUrl) return -1;\r\n        axios(prevUrl).then(previous =>\r\n            this.setState({\r\n                ...this.state,\r\n                prevPage: previous.data\r\n            }));\r\n    }\r\n    loadNext() {\r\n        const newState = { ...this.state };\r\n        this.setState({\r\n            ...newState,\r\n            prevPage: newState.currentPage,\r\n            currentPage: newState.nextPage,\r\n            nextPage: null\r\n        }, () => this.fetchNext(this.state.currentPage.next));\r\n    }\r\n    loadPrev() {\r\n        const newState = { ...this.state };\r\n        this.setState({\r\n            ...newState,\r\n            nextPage: newState.currentPage,\r\n            currentPage: newState.prevPage,\r\n            prevPage: null\r\n        }, () => this.fetchPrevious(this.state.currentPage.previous));\r\n    }\r\n    sort(sort) {\r\n        this.setState({\r\n            ...this.state,\r\n            sort\r\n        });\r\n    }\r\n    toggleDetails(index) {\r\n        let detailed;\r\n        if (index !== null) {\r\n            detailed = index;\r\n            setTimeout( () => {\r\n                window.scrollTo(0, this.myRef.current.offsetTop);\r\n            }, 2000);\r\n        } else {\r\n            detailed = this.state.detailed;\r\n        } \r\n        this.setState({\r\n            ...this.state,\r\n            details: !this.state.details,\r\n            detailed: detailed\r\n        }, () => {\r\n            this.getFilms(index);\r\n            this.getPeople(index);\r\n        });\r\n    }\r\n    getFilms(index) {\r\n        if (index === null) return -1;\r\n        const promises = this.state.currentPage.results[index].films.map(film => axios(film));\r\n        Promise.all(promises).then(res => {\r\n            const movies = res.map(movie => movie.data.title);\r\n            const newState = {...this.state};\r\n            newState.currentPage.results[index].movies = movies;\r\n            this.setState(newState);\r\n        });\r\n    }\r\n    getPeople(index) {\r\n        if (index === null) return -1;\r\n        const promises = this.state.currentPage.results[index].residents.map(resident => axios(resident));\r\n        Promise.all(promises).then(res => {\r\n            const citizens = res.map(citizen => citizen.data.name);\r\n            const newState = {...this.state};\r\n            newState.currentPage.results[index].citizens = citizens;\r\n            this.setState(newState);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const planets = this.state.currentPage ? this.state.currentPage.results : null;\r\n        const planet = this.state.currentPage && this.state.detailed !== null ? this.state.currentPage.results[this.state.detailed] : null;\r\n        const nextBtn = <div> {this.state.nextPage ?\r\n            <button className={'Planets-grid-next'} type=\"button\" onClick={() => this.loadNext()}></button>\r\n            : null}\r\n        </div>;\r\n        const prevBtn = <div> {this.state.prevPage ?\r\n            <button className={'Planets-grid-prev'} type=\"button\" onClick={() => this.loadPrev()}></button>\r\n            : null}\r\n        </div>;\r\n        return (\r\n            <>\r\n                <div ref={this.myRef} className={`Planets-content-wrapper ${this.state.details ? 'details' : ''}`}>\r\n                    <Link to=\"/\"><div className={'Planets-grid-prev Back-home'}></div></Link>\r\n                    <div ></div>\r\n                    {planets ? \r\n                    <div className={'Planets-grid-wrapper'} >\r\n                        <div className={'Planets-grid'} >\r\n                            <PlanetsHeader sort={this.state.sort} onSort={(sort) => this.sort(sort)} />\r\n                            <PlanetsGrid planets={planets} sort={this.state.sort} clicked={(index) => this.toggleDetails(index)} />\r\n                        </div>\r\n                        <nav className={'Planets-grid-navbar'} >{prevBtn}{nextBtn}</nav>\r\n                    </div> : <div className={'Planets-spinner'}> <Spinner /> </div>}\r\n                    <PlanetDetails planet={planet} sort={this.state.sort} clicked={(index) => this.toggleDetails(index)} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Planets;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from '../../axios-instance';\r\nimport { SORT } from '../../constatns';\r\nimport PlanetsGrid from '../../components/PlanetGrid/PlanetsGrid';\r\nimport PlanetsHeader from '../../components/PlanetGrid/PlanetsHeader';\r\nimport PlanetDetails from '../../components/PlanetDetails/PlanetDetails';\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\n\r\nimport './Planets.css';\r\n\r\n\r\nclass Planets extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentPage: null,\r\n            details: false,\r\n            detailed: null,\r\n            sort: {\r\n                key: false,\r\n                dir: SORT.NONE\r\n            }\r\n        };\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('planets/').then(res => {\r\n            const newState = {...this.state};\r\n            newState.currentPage = { results: res.data.results};\r\n            this.setState(newState,() => {\r\n                if (res.data.next) {\r\n                    this.fetchNext(res.data.next);\r\n                }\r\n            });\r\n        })\r\n    }\r\n    fetchNext(nextUrl) {\r\n        axios(nextUrl).then(next => {\r\n            const newState = {...this.state};\r\n            newState.currentPage.results = newState.currentPage.results.concat(next.data.results);\r\n            this.setState(newState,\r\n                () => {\r\n                    if(next.data.next) {\r\n                        this.fetchNext(next.data.next);\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    }\r\n    sort(sort) {\r\n        this.setState({\r\n            ...this.state,\r\n            sort\r\n        });\r\n    }\r\n    toggleDetails(index) {\r\n        let detailed;\r\n        if (index !== null) {\r\n            detailed = index;\r\n            setTimeout( () => {\r\n                window.scrollTo(0, this.myRef.current.offsetTop);\r\n            }, 2000);\r\n        } else {\r\n            detailed = this.state.detailed;\r\n        } \r\n        this.setState({\r\n            ...this.state,\r\n            details: !this.state.details,\r\n            detailed: detailed\r\n        }, () => {\r\n            this.getFilms(index);\r\n            this.getPeople(index);\r\n        });\r\n    }\r\n    getFilms(index) {\r\n        if (index === null) return -1;\r\n        const promises = this.state.currentPage.results[index].films.map(film => axios(film));\r\n        Promise.all(promises).then(res => {\r\n            const movies = res.map(movie => movie.data.title);\r\n            const newState = {...this.state};\r\n            newState.currentPage.results[index].movies = movies;\r\n            this.setState(newState);\r\n        });\r\n    }\r\n    getPeople(index) {\r\n        if (index === null) return -1;\r\n        const promises = this.state.currentPage.results[index].residents.map(resident => axios(resident));\r\n        Promise.all(promises).then(res => {\r\n            const citizens = res.map(citizen => citizen.data.name);\r\n            const newState = {...this.state};\r\n            newState.currentPage.results[index].citizens = citizens;\r\n            this.setState(newState);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const planets = this.state.currentPage ? this.state.currentPage.results : null;\r\n        const planet = this.state.currentPage && this.state.detailed !== null ? this.state.currentPage.results[this.state.detailed] : null;\r\n        const nextBtn = <div> {this.state.nextPage ?\r\n            <button className={'Planets-grid-next'} type=\"button\" onClick={() => this.loadNext()}></button>\r\n            : null}\r\n        </div>;\r\n        const prevBtn = <div> {this.state.prevPage ?\r\n            <button className={'Planets-grid-prev'} type=\"button\" onClick={() => this.loadPrev()}></button>\r\n            : null}\r\n        </div>;\r\n        return (\r\n            <>\r\n                <div ref={this.myRef} className={`Planets-content-wrapper ${this.state.details ? 'details' : ''}`}>\r\n                    <Link to=\"/\"><div className={'Planets-grid-prev Back-home'}></div></Link>\r\n                    <div ></div>\r\n                    {planets ?\r\n                    <div className={'Planets-grid-wrapper'} >\r\n                        <div className={'Planets-grid'} >\r\n                            <PlanetsHeader sort={this.state.sort} onSort={(sort) => this.sort(sort)} />\r\n                            <PlanetsGrid planets={planets} sort={this.state.sort} clicked={(index) => this.toggleDetails(index)} />\r\n                        </div>\r\n                        <nav className={'Planets-grid-navbar'} >{prevBtn}{nextBtn}</nav>\r\n                    </div> : <div className={'Planets-spinner'}> <Spinner /> </div>}\r\n                    <PlanetDetails planet={planet} sort={this.state.sort} clicked={(index) => this.toggleDetails(index)} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Planets;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css';\r\n\r\nconst home = props => (\r\n    <div className={'Home-wrapper'}>\r\n        <div className={'Home'}>\r\n        <div className={'Home-link'}>\r\n            <div className={'Link-left'}>$</div><Link to=\"/paginated\">Paginated</Link><div className={'Link-right'}>$</div>\r\n        </div>\r\n        <div className={'Home-link'}>\r\n            <div className={'Link-left'}>#</div><Link to=\"/unpaginated\">Unpaginated</Link><div className={'Link-right'}>#</div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default home;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Planets from './container/Planets/Planets';\r\nimport UnpaginatedPlanets from './container/Planets/UnPlanets';\r\nimport home from './components/Home/Home';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={home} />\r\n          <Route path=\"/unpaginated\" component={UnpaginatedPlanets} />\r\n          <Route path=\"/paginated\" component={Planets} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}